@import "tailwindcss";

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}
:root {
  --primary-green: #4caf50;
  --secondary-green: #aed581;
}

/* モーダル用オーバーレイ */
.modal-overlay {
  position: fixed;
  top: 0; left: 0;
  width: 100vw; height: 100vh;
  background: rgba(0,0,0,0.5);
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 1rem;                /* 余白を入れて上下に隙間を確保 */
  box-sizing: border-box;
  overflow: auto;               /* モーダルが大きいときスクロールする */
}
.modal-content {
  background: white;
  border-radius: 8px;
  padding: 1.5rem;
  max-width: 35%;              /* 横幅は画面の 90% まで */
  max-height: 90%;             /* 高さは画面の 90% まで */
  overflow-y: auto;             /* 縦にあふれたらスクロール */
  display: flex;
  flex-direction: column;
  align-items: center;          /* 子要素を水平方向中央揃え */
}

/* あの頃ボタン風 */
.btn {
  padding: 0.5rem 1.5rem;
  border-radius: 9999px;
  background: white;
  border: 2px solid var(--primary-green);
  color: var(--primary-green);
  font-weight: bold;
  cursor: pointer;
  transition: background .2s, color .2s;
  white-space: nowrap;
}
.btn:hover {
  background: var(--primary-green);
  color: white;
}
.btn-prev {
  border-color: var(--secondary-green);
  color: var(--secondary-green);
}
.btn-prev:hover {
  background: var(--secondary-green);
}
.btn:disabled {
  cursor: not-allowed;
  opacity: 0.5;     /* 無効時に半透明に */
  background: #eee; /* 必要なら色も変える */
  color: #999;
  border-color: #999;
}

/* 1) チョーク風フォントを読み込む */
@font-face {
  font-family: 'ChalkFont';
  src: url('/data/ChalkFont.otf') format('opentype');
  font-weight: normal;
  font-style: normal;
}

/* 2) ベースにチョークボード背景を当てる */
html, body, #__next {
  height: 100%;
  margin: 0;
  padding: 0;
}
.main-board {
  width: 100%;                             /* 横幅いっぱい */
  aspect-ratio: 16 / 9;                    /* 画像の縦横比に合わせる */
  background: url('/images/bg-pattern.png') top center no-repeat;
  margin: 0 auto;
  background-size: 100% auto;      /* 横幅100%、高さは自動 */
  position: relative;
  background-size: contain; /* 縦横比を保ったまま要素内に収まる */
  background-color: #553a21; /* 余白部分の背景色 */
  font-family: 'ChalkFont', sans-serif;
  display: grid;
  grid-template-columns: 5fr 3fr;          /* お好みのカラム比率 */
  gap: 1rem;
  padding: 2rem;
  color:white;
}


/* 4) カード選択枠のクラス */
.card-frame-1 { background: url('/images/CardPick1.png') no-repeat center/contain;
  padding: 14px;       /* 枠と中身の余白を作る */
  position: relative; /* 中のテキストやボタンを上に重ねるため */ }
.card-frame-2 { background: url('/images/CardPick2.png') no-repeat center/contain;
  padding: 14px;       /* 枠と中身の余白を作る */
  position: relative; /* 中のテキストやボタンを上に重ねるため */ }
.card-frame-3 { background: url('/images/CardPick3.png') no-repeat center/contain;
  padding: 14px;       /* 枠と中身の余白を作る */
  position: relative; /* 中のテキストやボタンを上に重ねるため */ }

.layout {
  display: grid;
  /* 左：伸びる、右：固定幅（必要に応じて調整） */
  grid-template-columns: 3fr 1fr;
  gap: 2rem;
  max-width: 100%;  /* ページ中央に寄せる最大幅 */
  margin: 0 ;     /* 横中央寄せ */
  padding: 1rem;      /* お好みで余白 */
}

@media (max-width: 768px) {
  .layout {
    grid-template-columns: 1fr;
  }
}

.left-panel {
  /* カードピックとグラフを上下に並べる例 */
  display: flex;
  flex-direction: column;
  /* max-width を入れて要素が広がりすぎないように */
  max-width: 100%;
}

.right-panel {
  flex: 1;
  display: flex;
  flex-direction: column;
  justify-content: space-between; /* 上に履歴、下にボタンを配置 */
  height: calc(100vh - /* ヘッダー等の余白を引く */ 0px);
  padding: 1rem;
}

.section-title { font-size: 2rem; margin:0; }
.draft-candidates { display: flex; gap: 1rem; flex-wrap: wrap; }
.charts { display: flex; gap: 1rem; align-items: flex-start; }
.history-list { list-style: none; padding: 0; margin: 0; }
.deck-grid {
  display: grid;
  grid-template-rows: repeat(10, auto);
  grid-auto-flow: column;
  gap: 12px;
}